version: "3.9"

services:
  prometheus:
    image: prom/prometheus:latest
    configs:
      - source: prometheus_config
        target: /etc/prometheus/prometheus.yml
    networks:
      - traefik-public
      - monitoring-internal
    deploy:
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.http.routers.prometheus.rule=Host(`prometheus.svodd.ru`)
        - traefik.http.services.prometheus.loadbalancer.server.port=9090
        - traefik.http.routers.prometheus.entrypoints=https
        - traefik.http.routers.prometheus.tls=true
        - traefik.http.routers.prometheus.tls.certresolver=letsEncrypt
      placement:
        constraints: [ node.labels.worker == monitoring ]

  grafana:
    image: grafana/grafana:latest
    volumes:
      - grafana-storage:/var/lib/grafana
    configs:
      - source: grafana_provisioning
        target: /etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - traefik-public
      - monitoring-internal
    deploy:
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.http.routers.grafana.rule=Host(`grafana.svodd.ru`)
        - traefik.http.services.grafana.loadbalancer.server.port=3000
        - traefik.http.routers.grafana.entrypoints=https
        - traefik.http.routers.grafana.tls=true
        - traefik.http.routers.grafana.tls.certresolver=letsEncrypt
      placement:
        constraints: [ node.labels.worker == monitoring ]

volumes:
  grafana-storage:

configs:
  prometheus_config:
    file: ./prometheus/prometheus.yml
  grafana_provisioning:
    file: ./grafana/provisioning

networks:
  traefik-public:
    external: true
  monitoring-internal:
    name: monitoring-internal
    external: true
    driver: overlay